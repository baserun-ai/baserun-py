[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "baserun"
version = "0.9.35"
description = "tools for testing, debugging, and evaluating llm features."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Adam Ginzberg", email = "adam@baserun.ai" },
    { name = "Erik Peterson", email = "erik@baserun.ai" }
]
requires-python = ">=3.8, <3.12"
dependencies = [
    "requests>=2.31.0",
    "openai>=1.7.2",
    "opentelemetry-sdk>=1.21",
    "opentelemetry-instrumentation>=0.40b0",
    "grpcio~=1.62.1",
    "protobuf~=4.24.3",
    "grpcio-tools~=1.58.0",
]

[project.urls]
Homepage = "https://baserun.ai"
Repository = "https://github.com/baserun-ai/baserun-py"

[project.entry-points.pytest11]
pbaserun = "baserun.pytest_plugin"

[tool.ruff]
extend-select = ["I", "T20"]  # isort, flake8-print
target-version = "py38"
line-length = 120
extend-exclude = [
    "baserun/v1/*", # autogenerated
    "baserun/__init__.py", # it makes it look bad for multiple "as" imports in a single from statement
]

[tool.ruff.per-file-ignores]
"baserun/v1/baserun_pb2.py" = ["E501"]  # Line too long
"tests/*" = ["T201"]  # `print` found

[tool.black]
line-length = 120

[tool.mypy]
exclude = ["baserun/v1/*", "tests"]
ignore_missing_imports = true
#TODO
#disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "baserun.v1.*"
disable_error_code = ["var-annotated"]
